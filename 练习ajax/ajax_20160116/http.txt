web请求的过程
1、解析 ip
2、解析 端口
3、使用http建立连接
4、发送http请求
5、接收http响应
6、拿到响应数据，并断开连接
7、渲染数据

什么是ajax?
异步javascript和xml

使用ajax和不适用ajax的区别
不使用ajax的情况：
点击任何一个功能按钮或与服务器之间的任何一个交互
都会造成浏览器重新刷新。
使用ajax的情况：
局部刷新，不需要刷新整个页面。

目前整个web互联网的流量绝大部分都是通过http传输的。

什么是http？
超文本传输协议-按照指定格式传输数据的一种协议
http是一个事务
什么是事务？
由n+1个事件组成的事件集合。
只有当列举所有事件都完成之后这个事务才算完成。
否则有任何一个事件失败，那么这个事务就是失败的。

http包括request和response 都包括三部分(起始行、首部、主体)
request的起始行->(http method、url、http version)
request的主体->(数据的承载，get系http method没有请求主体)

response的起始行->(http version、http status code、http stats text)
response的主体->(除了http method为head的请求没有response主体外，其他
的http method请求都一定会返回主体)



http method：
get、post、delete、put、head、options、trace、connection、track

get系的特征(get、delete、head)
1、会把给服务器发送的数据放到url后面。
2、有大小限制。
(L.E 因为get系把数据都放到url里面，而浏览器会对url的长度有大小限制，
所以造成了get系对传输的数据大小有限制)
ie->2K
firefox->7k
chrome->8k
3、会被缓存
4、不安全，因为明文发送
post系(post、put)
1、会把给服务器发送的数据放到请求主体里。
2、不会有大小限制
(L.E 因为post系把数据放到请求主体里，而请求主体是没有大小限制的)
3、永远不会被缓存
4、相对于get系安全许多。因为不是明文发送

ps：为什么get系会被缓存而post系不会被缓存?
因为get系设计的初衷是用来从服务器拉取数据的。含有两个特点：
数据可能很大，数据可能会重复。正因为有这两个特点，所以造成了
get系会被缓存。
post系设计的初衷是往服务器发送数据的。所以不需要缓存。

HEAD、DELETE这两个方法比较特殊：他们成功只返回202，不会返回200。

为什么设计者这么多http方法？
各司其职。固定的方法做固定的事。
CURD：
增加->put
删除->delete
修改->post
查询->get
这是一种软件设计架构，就叫restful.表征状态转移。

http status code：
1xx 信息提示
100
101 代表http正在初始化，1xx类型的http状态码 在http2.0中已经被删除了。

2xx 成功
200 代表成功
202 接受。

3xx 重定向
301 永久转移
1、降低搜索引擎的权重
302 临时转移
304 缓存(面试官会问304的原理是什么？)

4xx 客户端错误
400 错误的请求，少参数了。
401 未认证
403 禁止访问
404 未找到该资源

5xx 服务器错误
500 内部服务器错误
503 并发量太大，（在同一个时间段内请求这个服务器的数量）





